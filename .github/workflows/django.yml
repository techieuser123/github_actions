# name: Django CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python 3.10
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run Django checks
#         run: |
#           python manage.py check

#   test:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python 3.10
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: run django test
      
#         run: |
#           python manage.py test

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python 3.10
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Deploy log
#         run: |
#           echo "Deploying to Render"
#           echo "Deployment complete!"



name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Zip application
        run: |
          zip -r deploy.zip . -x "*.git*" "*__pycache__*" "*.DS_Store"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp deploy.zip s3://${{ secrets.S3_BUCKET }}/deploy.zip

      - name: Create Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label "v-${{ github.run_number }}" \
            --source-bundle S3Bucket=${{ secrets.S3_BUCKET }},S3Key=deploy.zip

      - name: Update Environment to New Version
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label "v-${{ github.run_number }}"


          

